import os
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram import types
from aiogram.types import Message
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")  # API-–∫–ª—é—á OpenWeatherMap
CITY = "Moscow"  # –ì–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API_TOKEN –∏ WEATHER_API_KEY –∑–∞–¥–∞–Ω—ã
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ (TELEGRAM_BOT_TOKEN) –Ω–µ –∑–∞–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ .env")
if not WEATHER_API_KEY:
    raise ValueError("API-–∫–ª—é—á –¥–ª—è OpenWeatherMap (WEATHER_API_KEY) –Ω–µ –∑–∞–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ .env")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
keyboard_builder = ReplyKeyboardBuilder()
keyboard_builder.row(
    KeyboardButton(text="/weather"), KeyboardButton(text="/help")
)
keyboard = keyboard_builder.as_markup(resize_keyboard=True)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É. üå§\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /weather, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–ø–∏—à–∏ /help.",
        reply_markup=keyboard,
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer(
        "–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n"
        "/weather ‚Äî —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É."
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
@dp.message(Command("weather"))
async def weather_command(message: Message):
    try:
        # –ó–∞–ø—Ä–æ—Å –∫ API –ø–æ–≥–æ–¥—ã
        url = f"http://api.openweathermap.org/data/2.5/weather?q={CITY}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
        response = requests.get(url)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        data = response.json()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        if "main" not in data or "weather" not in data:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        city = data["name"]
        temp = data["main"]["temp"]
        weather_description = data["weather"][0]["description"]

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        weather_message = (
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
            f"üå• –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description.capitalize()}"
        )
        await message.answer(weather_message)
    except requests.exceptions.RequestException as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ HTTP-–∑–∞–ø—Ä–æ—Å–∞
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        # –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())